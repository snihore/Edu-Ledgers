{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport Web3 from 'web3';\n\nvar GetMetamaskProvider =\n/*#__PURE__*/\nfunction () {\n  function GetMetamaskProvider() {\n    _classCallCheck(this, GetMetamaskProvider);\n\n    if (window.ethereum) {\n      this.web3 = new Web3(window.ethereum);\n    } else {\n      this.web3 = new Web3(window.web3.currentProvider);\n    }\n  }\n\n  _createClass(GetMetamaskProvider, [{\n    key: \"enable\",\n    value: function enable() {\n      return _regeneratorRuntime.async(function enable$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 8;\n                break;\n              }\n\n              window.ethereum.autoRefreshOnNetworkChange = false;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(window.ethereum.enable());\n\n            case 4:\n              console.log(\"TAG_web3JS: window.ethereum\");\n              return _context.abrupt(\"return\", this.web3);\n\n            case 8:\n              console.log(\"TAG_web3JS: window.web3.currentProvider\");\n              return _context.abrupt(\"return\", this.web3);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }]);\n\n  return GetMetamaskProvider;\n}();\n\nexport default GetMetamaskProvider;","map":{"version":3,"sources":["G:/Ethereum-Projects/edu-ledger/web3.js"],"names":["Web3","GetMetamaskProvider","window","ethereum","web3","currentProvider","autoRefreshOnNetworkChange","enable","console","log"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;;IAEMC,mB;;;AAEF,iCAAa;AAAA;;AACT,QAAGC,MAAM,CAACC,QAAV,EAAmB;AACf,WAAKC,IAAL,GAAY,IAAIJ,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAZ;AACH,KAFD,MAEK;AACD,WAAKC,IAAL,GAAY,IAAIJ,IAAJ,CAASE,MAAM,CAACE,IAAP,CAAYC,eAArB,CAAZ;AACH;AACJ;;;;;;;;;mBAIMH,MAAM,CAACC,Q;;;;;AACND,cAAAA,MAAM,CAACC,QAAP,CAAgBG,0BAAhB,GAA6C,KAA7C;;+CACMJ,MAAM,CAACC,QAAP,CAAgBI,MAAhB,E;;;AACNC,cAAAA,OAAO,CAACC,GAAR;+CACO,KAAKL,I;;;AAEZI,cAAAA,OAAO,CAACC,GAAR;+CACO,KAAKL,I;;;;;;;;;;;;;;AAKxB,eAAeH,mBAAf","sourcesContent":["import Web3 from 'web3';\r\n\r\nclass GetMetamaskProvider{\r\n\r\n    constructor(){\r\n        if(window.ethereum){\r\n            this.web3 = new Web3(window.ethereum);\r\n        }else{\r\n            this.web3 = new Web3(window.web3.currentProvider);\r\n        }\r\n    }\r\n\r\n    async enable(){\r\n\r\n        if(window.ethereum){\r\n            window.ethereum.autoRefreshOnNetworkChange = false;\r\n            await window.ethereum.enable();\r\n            console.log(`TAG_web3JS: window.ethereum`);\r\n            return this.web3;\r\n        }else{\r\n            console.log(`TAG_web3JS: window.web3.currentProvider`);\r\n            return this.web3;\r\n        }\r\n    }\r\n}\r\n\r\nexport default GetMetamaskProvider;"]},"metadata":{},"sourceType":"module"}