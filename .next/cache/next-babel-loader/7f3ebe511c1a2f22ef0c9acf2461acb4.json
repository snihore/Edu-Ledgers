{"ast":null,"code":"var _jsxFileName = \"G:\\\\Ethereum-Projects\\\\edu-ledger\\\\pages\\\\college_dashboard.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport GetInstance from '../instance';\nimport EducationLoan from '../ethereum/build/EducationLoan.json';\nimport { Menu, Card, Button, Divider, Form, Grid, Segment, Dimmer, Loader, List } from 'semantic-ui-react';\n\nconst DefaultLoader = props => __jsx(Segment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(Dimmer, {\n  active: props.active,\n  page: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(Loader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n})));\n\nfunction removeDuplicates(array) {\n  return array.filter((a, b) => array.indexOf(a) === b);\n}\n\n;\n\nclass CollegeDashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: '',\n      loanAddress: '',\n      loaderActive: false,\n      web3: undefined,\n      instance: undefined,\n      eduLoanInstance: undefined,\n      listItems: [],\n      statusStack: []\n    });\n\n    _defineProperty(this, \"getAddresses\", async () => {\n      const studentAddr = await this.state.eduLoanInstance.methods.student().call();\n      const bankAddr = await this.state.eduLoanInstance.methods.bank().call();\n      this.setState({\n        bankAddr,\n        studentAddr\n      });\n    });\n\n    _defineProperty(this, \"getLoanHistory\", async () => {\n      this.setState({\n        statusStack: [],\n        listItems: []\n      });\n      let statusStack = await this.state.eduLoanInstance.methods.getStatusStack().call();\n      statusStack.sort();\n      statusStack = removeDuplicates(statusStack);\n      this.setState({\n        statusStack\n      }); // console.log(`STATUS STACK: ${statusStack}`);\n\n      for (var i = 0; i < statusStack.length; i++) {\n        const status = statusStack[i];\n        let item = await this.state.eduLoanInstance.methods.history(status).call();\n        item += `\\t[ ${this.state.listItems.length + 1} ]`;\n        const localListItems = this.state.listItems;\n        localListItems.push(item);\n        this.setState({\n          listItems: localListItems\n        });\n      }\n    });\n  }\n\n  static getInitialProps({\n    query\n  }) {\n    return {\n      query\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loanAddress: this.props.query.loanAddress\n    });\n    const {\n      web3,\n      instance\n    } = await new GetInstance().get();\n    const accounts = await web3.eth.getAccounts();\n    const eduLoanInstance = await new web3.eth.Contract(JSON.parse(EducationLoan.interface), this.state.loanAddress); // console.log(`Edu-Loan Instance: ${eduLoanInstance.options.address}`);\n\n    this.setState({\n      web3,\n      instance,\n      eduLoanInstance,\n      account: accounts[0],\n      bankAddr: '',\n      studentAddr: ''\n    });\n    this.getLoanHistory();\n    this.getAddresses();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        marginLeft: 100,\n        marginRight: 100,\n        marginTop: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(Menu, {\n      style: {\n        marginBottom: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(Menu.Item, {\n      header: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Edu-Ledger\"), __jsx(Menu.Menu, {\n      position: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      style: {\n        marginRight: 10,\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"College Address:\"), this.state.account), __jsx(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      style: {\n        marginRight: 10,\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Loan Address:\"), this.state.loanAddress)))), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(Grid, {\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(Card.Content, {\n      header: \"Varify Admission\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), __jsx(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(Form.Input, {\n      placeholder: \"Course Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      placeholder: \"Course Duration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      placeholder: \"Session Type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      placeholder: \"Total Fee (approx.)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), __jsx(Button, {\n      content: \"Varify\",\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), __jsx(Button, {\n      content: \"Reject\",\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })))), __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, __jsx(Card.Content, {\n      header: \"Enter Session Fee Amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), __jsx(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(Form.Input, {\n      placeholder: \"Amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      placeholder: \"Account Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), __jsx(Button, {\n      content: \"Update\",\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))))))), __jsx(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Loan Participants\"), __jsx(Segment, {\n      inverted: true,\n      style: {\n        backgroundColor: '#EEEEEE'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, __jsx(List, {\n      divided: true,\n      inverted: true,\n      relaxed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, __jsx(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, __jsx(List.Header, {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"STUDENT ADDRESS:\"), __jsx(List.Content, {\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.state.studentAddr)), __jsx(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, __jsx(List.Header, {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"BANK ADDRESS:\"), __jsx(List.Content, {\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.bankAddr))))), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"History\"), __jsx(List, {\n      divided: true,\n      relaxed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.state.listItems.map(item => {\n      const key = this.state.statusStack[this.state.listItems.indexOf(item)];\n      return __jsx(List.Item, {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, __jsx(List.Icon, {\n        name: \"check circle\",\n        size: \"large\",\n        verticalAlign: \"middle\",\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), __jsx(List.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, item)));\n    }))))))), __jsx(DefaultLoader, {\n      active: this.state.loaderActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CollegeDashboard;","map":{"version":3,"sources":["G:/Ethereum-Projects/edu-ledger/pages/college_dashboard.js"],"names":["React","Component","GetInstance","EducationLoan","Menu","Card","Button","Divider","Form","Grid","Segment","Dimmer","Loader","List","DefaultLoader","props","active","removeDuplicates","array","filter","a","b","indexOf","CollegeDashboard","account","loanAddress","loaderActive","web3","undefined","instance","eduLoanInstance","listItems","statusStack","studentAddr","state","methods","student","call","bankAddr","bank","setState","getStatusStack","sort","i","length","status","item","history","localListItems","push","getInitialProps","query","componentDidMount","get","accounts","eth","getAccounts","Contract","JSON","parse","interface","getLoanHistory","getAddresses","render","marginLeft","marginRight","marginTop","marginBottom","color","backgroundColor","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport GetInstance from '../instance';\r\nimport EducationLoan from '../ethereum/build/EducationLoan.json';\r\nimport { Menu, Card, Button, Divider, Form, Grid, Segment, Dimmer, Loader, List } from 'semantic-ui-react';\r\n\r\nconst DefaultLoader = (props) => (\r\n    <Segment>\r\n      <Dimmer\r\n          active = {props.active}\r\n          page={true}>\r\n        <Loader />\r\n      </Dimmer>\r\n    </Segment>\r\n  )\r\n\r\nfunction removeDuplicates(array) {\r\n    return array.filter((a, b) => array.indexOf(a) === b)\r\n};\r\n\r\nclass CollegeDashboard extends Component {\r\n\r\n    static getInitialProps({ query }) {\r\n        return { query };\r\n    }\r\n\r\n    state = {\r\n        account: '',\r\n        loanAddress: '',\r\n        loaderActive: false,\r\n        web3: undefined,\r\n        instance: undefined,\r\n        eduLoanInstance: undefined,\r\n        listItems: [],\r\n        statusStack: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({\r\n            loanAddress: this.props.query.loanAddress\r\n        });\r\n        const { web3, instance } = await new GetInstance().get();\r\n\r\n        const accounts = await web3.eth.getAccounts();\r\n\r\n        const eduLoanInstance = await new web3.eth.Contract(JSON.parse(EducationLoan.interface), this.state.loanAddress);\r\n        // console.log(`Edu-Loan Instance: ${eduLoanInstance.options.address}`);\r\n        this.setState({\r\n            web3,\r\n            instance,\r\n            eduLoanInstance,\r\n            account: accounts[0],\r\n            bankAddr: '',\r\n            studentAddr: ''\r\n        });\r\n        this.getLoanHistory();\r\n        this.getAddresses();\r\n    }\r\n\r\n    getAddresses = async ()=>{\r\n\r\n        const studentAddr =  await this.state.eduLoanInstance.methods.student().call();\r\n        const bankAddr = await this.state.eduLoanInstance.methods.bank().call();\r\n\r\n        this.setState({\r\n            bankAddr,\r\n            studentAddr\r\n        });\r\n    }\r\n\r\n    getLoanHistory = async ()=>{\r\n        this.setState({\r\n            statusStack: [],\r\n            listItems: []\r\n        });\r\n        let statusStack = await this.state.eduLoanInstance.methods.getStatusStack().call();\r\n        statusStack.sort();\r\n        statusStack = removeDuplicates(statusStack);\r\n        this.setState({ statusStack });\r\n        // console.log(`STATUS STACK: ${statusStack}`);\r\n        \r\n        for(var i=0; i<statusStack.length; i++){\r\n\r\n            const status = statusStack[i];\r\n\r\n            let item = await this.state.eduLoanInstance.methods.history(status).call();\r\n            item += `\\t[ ${this.state.listItems.length+1} ]`;\r\n            const localListItems = this.state.listItems;\r\n            localListItems.push(item);\r\n            this.setState({\r\n                listItems: localListItems\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{\r\n                marginLeft: 100,\r\n                marginRight: 100,\r\n                marginTop: 50\r\n            }}>\r\n                <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\r\n\r\n                <div>\r\n                    <Menu style={{ marginBottom: 50 }}>\r\n                        <Menu.Item header>\r\n                            Edu-Ledger\r\n                    </Menu.Item>\r\n\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                                <h4 style={{\r\n                                    marginRight: 10,\r\n                                    color: 'green'\r\n                                }}>College Address:</h4>{this.state.account}\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                <h4 style={{\r\n                                    marginRight: 10,\r\n                                    color: 'green'\r\n                                }}>Loan Address:</h4>{this.state.loanAddress}\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </Menu>\r\n                </div>\r\n                <div>\r\n                    <Grid columns={2}>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <div>\r\n                                    <Card.Group>\r\n                                        <Card>\r\n                                            <Card.Content header='Varify Admission' />\r\n                                            <Card.Content>\r\n                                                <Form>\r\n                                                    <Form.Input\r\n                                                        placeholder='Course Name'\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Course Duration'\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Session Type'\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Total Fee (approx.)'\r\n                                                    />\r\n                                                    <Button content='Varify' primary />\r\n                                                    <Button content='Reject' primary />\r\n                                                </Form>\r\n                                            </Card.Content>\r\n                                        </Card>\r\n                                        <Card>\r\n                                            <Card.Content header='Enter Session Fee Amount' />\r\n                                            <Card.Content>\r\n                                                <Form>\r\n                                                    <Form.Input\r\n                                                        placeholder='Amount'\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Account Number'\r\n                                                    />\r\n                                                    <Button content='Update' primary />\r\n                                                </Form>\r\n                                            </Card.Content>\r\n                                        </Card>\r\n                                        \r\n                                    </Card.Group>\r\n                                </div>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                            <   div style={{ marginBottom: 20 }}>\r\n                                    <h3>Loan Participants</h3>\r\n                                    <Segment inverted style={{backgroundColor: '#EEEEEE'}}>\r\n                                        <List divided inverted relaxed>\r\n                                        <List.Item>\r\n                                            <List.Header style={{color:'black'}}>STUDENT ADDRESS:</List.Header>\r\n                                            <List.Content style={{color:'green'}}>\r\n                                            { this.state.studentAddr }\r\n                                            </List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Header style={{color:'black'}}>BANK ADDRESS:</List.Header>\r\n                                            <List.Content style={{color:'green'}}>\r\n                                            { this.state.bankAddr }\r\n                                            </List.Content>\r\n                                        </List.Item>\r\n                                        </List>\r\n                                    </Segment>\r\n                                </div>\r\n                                <div>\r\n                                <h3>History</h3>\r\n                                <List divided relaxed>\r\n                                   {\r\n                                       this.state.listItems.map((item)=>{\r\n                                           const key = this.state.statusStack[this.state.listItems.indexOf(item)];\r\n                                        \r\n                                           return (\r\n                                            <List.Item key={key}>\r\n                                                <List.Icon name='check circle' size='large' verticalAlign='middle' style={{color:'green'}} />\r\n                                                <List.Content>\r\n                                                <List.Header style={{color:'blue'}}>{item}</List.Header>\r\n                                                </List.Content>\r\n                                            </List.Item>\r\n                                           )\r\n                                       })\r\n                                   }\r\n                                </List>\r\n                                </div>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n\r\n                </div>\r\n                <DefaultLoader active={this.state.loaderActive} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CollegeDashboard;"]},"metadata":{},"sourceType":"module"}