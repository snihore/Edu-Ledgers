{"ast":null,"code":"var _jsxFileName = \"G:\\\\Ethereum-Projects\\\\edu-ledger\\\\pages\\\\student_dashboard.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport GetInstance from '../instance';\nimport EducationLoan from '../ethereum/build/EducationLoan.json';\nimport { Menu, Card, Button, Divider, Form, Grid, Segment, Dimmer, Loader, List } from 'semantic-ui-react';\n\nconst DefaultLoader = props => __jsx(Segment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(Dimmer, {\n  active: props.active,\n  page: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(Loader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n})));\n\nfunction removeDuplicates(array) {\n  return array.filter((a, b) => array.indexOf(a) === b);\n}\n\n;\n\nclass StudentDashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: '',\n      loanAddress: '',\n      loaderActive: false,\n      web3: undefined,\n      instance: undefined,\n      eduLoanInstance: undefined,\n      listItems: [],\n      statusStack: [],\n      yourCollegeAddr: '',\n      yourBankAddr: '',\n      collegeAddr: '',\n      receiptAddr: '',\n      selectBankIndex: '',\n      stuIdentityInfo: '',\n      stuAddressInfo: '',\n      stuFinancialInfo: '',\n      stuDomicileInfo: '',\n      stuPassBook: ''\n    });\n\n    _defineProperty(this, \"getAddresses\", async () => {\n      const yourCollegeAddr = await this.state.eduLoanInstance.methods.college().call();\n      const yourBankAddr = await this.state.eduLoanInstance.methods.bank().call();\n      this.setState({\n        yourBankAddr,\n        yourCollegeAddr\n      });\n    });\n\n    _defineProperty(this, \"getLoanHistory\", async () => {\n      this.setState({\n        statusStack: [],\n        listItems: []\n      });\n      let statusStack = await this.state.eduLoanInstance.methods.getStatusStack().call();\n      statusStack.sort();\n      statusStack = removeDuplicates(statusStack);\n      this.setState({\n        statusStack\n      }); // console.log(`STATUS STACK: ${statusStack}`);\n\n      for (var i = 0; i < statusStack.length; i++) {\n        const status = statusStack[i];\n        let item = await this.state.eduLoanInstance.methods.history(status).call();\n        item += `\\t[ ${this.state.listItems.length + 1} ]`;\n        const localListItems = this.state.listItems;\n        localListItems.push(item);\n        this.setState({\n          listItems: localListItems\n        });\n      }\n    });\n\n    _defineProperty(this, \"uploadAdmissionReceipt\", async event => {\n      event.preventDefault();\n\n      if (this.state.collegeAddr === '' || this.state.receiptAddr === '') {\n        window.alert('Please fill all the input fields ...');\n        return;\n      }\n\n      try {\n        this.setState({\n          loaderActive: true\n        });\n        await this.state.eduLoanInstance.methods.applyForLoan(this.state.collegeAddr, this.state.receiptAddr).send({\n          from: this.state.account\n        });\n        this.setState({\n          loaderActive: false\n        });\n        this.getLoanHistory();\n        this.getAddresses();\n      } catch (err) {\n        window.alert(err.message);\n        this.setState({\n          loaderActive: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"selectBank\", async event => {\n      event.preventDefault();\n\n      if (this.state.selectBankIndex === '') {\n        window.alert('Please fill all the input fields ...');\n        return;\n      }\n\n      try {\n        this.setState({\n          loaderActive: true\n        });\n        await this.state.eduLoanInstance.methods.selectBank(Number(this.state.selectBankIndex)).send({\n          from: this.state.account\n        });\n        this.setState({\n          loaderActive: false\n        });\n        this.getLoanHistory();\n        this.getAddresses();\n      } catch (err) {\n        window.alert(err.message);\n        this.setState({\n          loaderActive: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"uploadDocuments\", async event => {\n      event.preventDefault();\n\n      if (this.state.stuAddressInfo === '' || this.state.stuDomicileInfo === '' || this.state.stuFinancialInfo === '' || this.state.stuIdentityInfo === '' || this.state.stuPassBook === '') {\n        window.alert(\"Please fill all the input fields ...\");\n        return;\n      }\n\n      try {\n        this.setState({\n          loaderActive: true\n        });\n        await this.state.eduLoanInstance.methods.enterDocumentsInfo(this.state.stuAddressInfo, this.state.stuDomicileInfo, this.state.stuFinancialInfo, this.state.stuIdentityInfo, this.state.stuPassBook).send({\n          from: this.state.account\n        });\n        this.setState({\n          loaderActive: false\n        });\n        this.getLoanHistory();\n      } catch (err) {\n        window.alert(err.message);\n        this.setState({\n          loaderActive: false\n        });\n      }\n    });\n  }\n\n  static getInitialProps({\n    query\n  }) {\n    return {\n      query\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loanAddress: this.props.query.loanAddress\n    });\n    const {\n      web3,\n      instance\n    } = await new GetInstance().get();\n    const accounts = await web3.eth.getAccounts();\n    const eduLoanInstance = await new web3.eth.Contract(JSON.parse(EducationLoan.interface), this.state.loanAddress); // console.log(`Edu-Loan Instance: ${eduLoanInstance.options.address}`);\n\n    this.setState({\n      web3,\n      instance,\n      eduLoanInstance,\n      account: accounts[0]\n    });\n    this.getLoanHistory();\n    this.getAddresses();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        marginLeft: 100,\n        marginRight: 100,\n        marginTop: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, __jsx(Menu, {\n      style: {\n        marginBottom: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, __jsx(Menu.Item, {\n      header: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Edu-Ledger\"), __jsx(Menu.Menu, {\n      position: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, __jsx(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      style: {\n        marginRight: 10,\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Your Address:\"), this.state.account), __jsx(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      style: {\n        marginRight: 10,\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Loan Address:\"), this.state.loanAddress)))), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, __jsx(Grid, {\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, __jsx(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, __jsx(Card.Content, {\n      header: \"Upload Admission Receipt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), __jsx(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, __jsx(Form.Input, {\n      placeholder: \"College Address\",\n      value: this.state.collegeAddr,\n      onChange: event => this.setState({\n        collegeAddr: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      placeholder: \"Confirmed Admission Receipt\",\n      value: this.state.receiptAddr,\n      onChange: event => this.setState({\n        receiptAddr: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), __jsx(Button, {\n      content: \"Upload\",\n      primary: true,\n      onClick: this.uploadAdmissionReceipt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })))), __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, __jsx(Card.Content, {\n      header: \"Select Bank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), __jsx(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, __jsx(Form.Input, {\n      placeholder: \"Index\",\n      value: this.state.selectBankIndex,\n      onChange: event => this.setState({\n        selectBankIndex: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), __jsx(Button, {\n      content: \"Select\",\n      primary: true,\n      onClick: this.selectBank,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })))), __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, __jsx(Card.Content, {\n      header: \"Upload Documents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), __jsx(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, __jsx(Form.Input, {\n      placeholder: \"Identity Info.\",\n      value: this.state.stuIdentityInfo,\n      onChange: event => this.setState({\n        stuIdentityInfo: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      placeholder: \"Address Info.\",\n      value: this.state.stuAddressInfo,\n      onChange: event => this.setState({\n        stuAddressInfo: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      placeholder: \"Financial Info.\",\n      value: this.state.stuFinancialInfo,\n      onChange: event => this.setState({\n        stuFinancialInfo: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      placeholder: \"Domicile Info.\",\n      value: this.state.stuDomicileInfo,\n      onChange: event => this.setState({\n        stuDomicileInfo: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      placeholder: \"Bank Passbook\",\n      value: this.state.stuPassBook,\n      onChange: event => this.setState({\n        stuPassBook: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), __jsx(Button, {\n      content: \"Upload\",\n      primary: true,\n      onClick: this.uploadDocuments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })))), __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, __jsx(Card.Content, {\n      header: \"Apply for Session Fee\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), __jsx(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, __jsx(Form.Input, {\n      placeholder: \"Session (Number)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), __jsx(Button, {\n      content: \"Apply\",\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }))))))), __jsx(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        marginBottom: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, __jsx(Segment, {\n      inverted: true,\n      style: {\n        color: '#BDBDBD'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, __jsx(List, {\n      divided: true,\n      inverted: true,\n      relaxed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, __jsx(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, __jsx(List.Header, {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"YOUR COLLEGE ADDRESS:\"), __jsx(List.Content, {\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, this.state.yourCollegeAddr)), __jsx(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, __jsx(List.Header, {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"BANK ADDRESS:\"), __jsx(List.Content, {\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, this.state.yourBankAddr))))), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"History\"), __jsx(List, {\n      divided: true,\n      relaxed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, this.state.listItems.map(item => {\n      const key = this.state.statusStack[this.state.listItems.indexOf(item)];\n      return __jsx(List.Item, {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, __jsx(List.Icon, {\n        name: \"check circle\",\n        size: \"large\",\n        verticalAlign: \"middle\",\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), __jsx(List.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, item)));\n    }))))))), __jsx(DefaultLoader, {\n      active: this.state.loaderActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default StudentDashboard;","map":{"version":3,"sources":["G:/Ethereum-Projects/edu-ledger/pages/student_dashboard.js"],"names":["React","Component","GetInstance","EducationLoan","Menu","Card","Button","Divider","Form","Grid","Segment","Dimmer","Loader","List","DefaultLoader","props","active","removeDuplicates","array","filter","a","b","indexOf","StudentDashboard","account","loanAddress","loaderActive","web3","undefined","instance","eduLoanInstance","listItems","statusStack","yourCollegeAddr","yourBankAddr","collegeAddr","receiptAddr","selectBankIndex","stuIdentityInfo","stuAddressInfo","stuFinancialInfo","stuDomicileInfo","stuPassBook","state","methods","college","call","bank","setState","getStatusStack","sort","i","length","status","item","history","localListItems","push","event","preventDefault","window","alert","applyForLoan","send","from","getLoanHistory","getAddresses","err","message","selectBank","Number","enterDocumentsInfo","getInitialProps","query","componentDidMount","get","accounts","eth","getAccounts","Contract","JSON","parse","interface","render","marginLeft","marginRight","marginTop","marginBottom","color","target","value","uploadAdmissionReceipt","uploadDocuments","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport GetInstance from '../instance';\r\nimport EducationLoan from '../ethereum/build/EducationLoan.json';\r\nimport { Menu, Card, Button, Divider, Form, Grid, Segment, Dimmer, Loader, List } from 'semantic-ui-react';\r\n\r\nconst DefaultLoader = (props) => (\r\n    <Segment>\r\n      <Dimmer\r\n          active = {props.active}\r\n          page={true}>\r\n        <Loader />\r\n      </Dimmer>\r\n    </Segment>\r\n  )\r\n\r\nfunction removeDuplicates(array) {\r\n    return array.filter((a, b) => array.indexOf(a) === b)\r\n};\r\n\r\nclass StudentDashboard extends Component {\r\n\r\n    static getInitialProps({ query }) {\r\n        return { query };\r\n    }\r\n\r\n    state = {\r\n        account: '',\r\n        loanAddress: '',\r\n        loaderActive: false,\r\n        web3: undefined,\r\n        instance: undefined,\r\n        eduLoanInstance: undefined,\r\n        listItems: [],\r\n        statusStack: [],\r\n        yourCollegeAddr: '',\r\n        yourBankAddr: '',\r\n        collegeAddr: '',\r\n        receiptAddr: '',\r\n        selectBankIndex: '',\r\n        stuIdentityInfo: '',\r\n        stuAddressInfo: '',\r\n        stuFinancialInfo: '',\r\n        stuDomicileInfo: '',\r\n        stuPassBook: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({\r\n            loanAddress: this.props.query.loanAddress\r\n        });\r\n        const { web3, instance } = await new GetInstance().get();\r\n\r\n        const accounts = await web3.eth.getAccounts();\r\n\r\n        const eduLoanInstance = await new web3.eth.Contract(JSON.parse(EducationLoan.interface), this.state.loanAddress);\r\n        // console.log(`Edu-Loan Instance: ${eduLoanInstance.options.address}`);\r\n        this.setState({\r\n            web3,\r\n            instance,\r\n            eduLoanInstance,\r\n            account: accounts[0]\r\n        });\r\n        this.getLoanHistory();\r\n        this.getAddresses();\r\n    }\r\n\r\n    getAddresses = async ()=>{\r\n\r\n        const yourCollegeAddr =  await this.state.eduLoanInstance.methods.college().call();\r\n        const yourBankAddr = await this.state.eduLoanInstance.methods.bank().call();\r\n\r\n        this.setState({\r\n            yourBankAddr,\r\n            yourCollegeAddr\r\n        });\r\n    }\r\n\r\n    getLoanHistory = async ()=>{\r\n        this.setState({\r\n            statusStack: [],\r\n            listItems: []\r\n        });\r\n        let statusStack = await this.state.eduLoanInstance.methods.getStatusStack().call();\r\n        statusStack.sort();\r\n        statusStack = removeDuplicates(statusStack);\r\n        this.setState({ statusStack });\r\n        // console.log(`STATUS STACK: ${statusStack}`);\r\n        \r\n        for(var i=0; i<statusStack.length; i++){\r\n\r\n            const status = statusStack[i];\r\n\r\n            let item = await this.state.eduLoanInstance.methods.history(status).call();\r\n            item += `\\t[ ${this.state.listItems.length+1} ]`;\r\n            const localListItems = this.state.listItems;\r\n            localListItems.push(item);\r\n            this.setState({\r\n                listItems: localListItems\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    uploadAdmissionReceipt = async event =>{\r\n        event.preventDefault();\r\n        \r\n        if(this.state.collegeAddr === '' || this.state.receiptAddr === ''){\r\n            window.alert('Please fill all the input fields ...');\r\n            return;\r\n        }\r\n\r\n        try{\r\n            this.setState({ loaderActive: true });\r\n            \r\n            await this.state.eduLoanInstance.methods.applyForLoan(this.state.collegeAddr, this.state.receiptAddr).send({\r\n                from: this.state.account\r\n            });\r\n            \r\n            this.setState({ loaderActive: false });\r\n            this.getLoanHistory();\r\n            this.getAddresses();\r\n\r\n        }catch(err){\r\n            window.alert(err.message);\r\n            this.setState({ loaderActive: false });\r\n        }\r\n    }\r\n\r\n    selectBank = async event =>{\r\n        event.preventDefault();\r\n\r\n        if(this.state.selectBankIndex === ''){\r\n            window.alert('Please fill all the input fields ...');\r\n            return;\r\n        }\r\n\r\n        try{\r\n            this.setState({ loaderActive: true });\r\n            \r\n            await this.state.eduLoanInstance.methods.selectBank(Number(this.state.selectBankIndex)).send({\r\n                from: this.state.account\r\n            });\r\n            \r\n            this.setState({ loaderActive: false });\r\n            this.getLoanHistory();\r\n            this.getAddresses();\r\n\r\n        }catch(err){\r\n            window.alert(err.message);\r\n            this.setState({ loaderActive: false });\r\n        }\r\n    }\r\n    uploadDocuments = async event =>{\r\n        event.preventDefault();\r\n\r\n        if(\r\n            this.state.stuAddressInfo === '' ||\r\n            this.state.stuDomicileInfo === '' ||\r\n            this.state.stuFinancialInfo === '' ||\r\n            this.state.stuIdentityInfo === '' ||\r\n            this.state.stuPassBook === ''\r\n        ){\r\n            window.alert(\"Please fill all the input fields ...\");\r\n            return;\r\n        }\r\n\r\n        try{\r\n            this.setState({ loaderActive: true });\r\n            \r\n            await this.state.eduLoanInstance.methods.enterDocumentsInfo(\r\n                this.state.stuAddressInfo,\r\n                this.state.stuDomicileInfo,\r\n                this.state.stuFinancialInfo,\r\n                this.state.stuIdentityInfo,\r\n                this.state.stuPassBook\r\n            ).send({\r\n                from: this.state.account\r\n            });\r\n            \r\n            this.setState({ loaderActive: false });\r\n            this.getLoanHistory();\r\n\r\n        }catch(err){\r\n            window.alert(err.message);\r\n            this.setState({ loaderActive: false });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div style={{\r\n                marginLeft: 100,\r\n                marginRight: 100,\r\n                marginTop: 50\r\n            }}>\r\n                <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\r\n\r\n                <div>\r\n                    <Menu style={{ marginBottom: 50 }}>\r\n                        <Menu.Item header>\r\n                            Edu-Ledger\r\n                    </Menu.Item>\r\n\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                                <h4 style={{\r\n                                    marginRight: 10,\r\n                                    color: 'green'\r\n                                }}>Your Address:</h4>{this.state.account}\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                <h4 style={{\r\n                                    marginRight: 10,\r\n                                    color: 'green'\r\n                                }}>Loan Address:</h4>{this.state.loanAddress}\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </Menu>\r\n                </div>\r\n                <div>\r\n                    <Grid columns={2}>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <div>\r\n                                    <Card.Group>\r\n                                        <Card>\r\n                                            <Card.Content header='Upload Admission Receipt' />\r\n                                            <Card.Content>\r\n                                                <Form>\r\n                                                    <Form.Input\r\n                                                        placeholder='College Address'\r\n                                                        value={this.state.collegeAddr} \r\n                                                        onChange={event => this.setState({ collegeAddr: event.target.value })}\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Confirmed Admission Receipt'\r\n                                                        value={this.state.receiptAddr} \r\n                                                        onChange={event => this.setState({ receiptAddr: event.target.value })}\r\n                                                    />\r\n                                                    <Button content='Upload' primary onClick={this.uploadAdmissionReceipt}/>\r\n                                                </Form>\r\n                                            </Card.Content>\r\n                                        </Card>\r\n                                        <Card>\r\n                                            <Card.Content header='Select Bank' />\r\n                                            <Card.Content>\r\n                                                <Form>\r\n                                                    <Form.Input\r\n                                                        placeholder='Index'\r\n                                                        value={this.state.selectBankIndex} \r\n                                                        onChange={event => this.setState({ selectBankIndex: event.target.value })}\r\n                                                    />\r\n                                                    <Button content='Select' primary onClick={this.selectBank}/>\r\n                                                </Form>\r\n                                            </Card.Content>\r\n                                        </Card>\r\n                                        <Card>\r\n                                            <Card.Content header='Upload Documents' />\r\n                                            <Card.Content>\r\n                                                <Form>\r\n                                                    <Form.Input\r\n                                                        placeholder='Identity Info.'\r\n                                                        value={this.state.stuIdentityInfo} \r\n                                                        onChange={event => this.setState({ stuIdentityInfo: event.target.value })}\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Address Info.'\r\n                                                        value={this.state.stuAddressInfo} \r\n                                                        onChange={event => this.setState({ stuAddressInfo: event.target.value })}\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Financial Info.'\r\n                                                        value={this.state.stuFinancialInfo} \r\n                                                        onChange={event => this.setState({ stuFinancialInfo: event.target.value })}\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Domicile Info.'\r\n                                                        value={this.state.stuDomicileInfo} \r\n                                                        onChange={event => this.setState({ stuDomicileInfo: event.target.value })}\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Bank Passbook'\r\n                                                        value={this.state.stuPassBook} \r\n                                                        onChange={event => this.setState({ stuPassBook: event.target.value })}\r\n                                                    />\r\n                                                    <Button content='Upload' primary onClick={this.uploadDocuments}/>\r\n                                                </Form>\r\n                                            </Card.Content>\r\n                                        </Card>\r\n                                        <Card>\r\n                                            <Card.Content header='Apply for Session Fee' />\r\n                                            <Card.Content>\r\n                                                <Form>\r\n                                                    <Form.Input\r\n                                                        placeholder='Session (Number)'\r\n                                                    />\r\n                                                    <Button content='Apply' primary />\r\n                                                </Form>\r\n                                            </Card.Content>\r\n                                        </Card>\r\n                                    </Card.Group>\r\n                                </div>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <div style={{ marginBottom: 50 }}>\r\n                                <Segment inverted style={{color:'#BDBDBD'}}>\r\n                                    <List divided inverted relaxed>\r\n                                    <List.Item>\r\n                                        <List.Header style={{color:'black'}}>YOUR COLLEGE ADDRESS:</List.Header>\r\n                                        <List.Content style={{color:'green'}}>\r\n                                        { this.state.yourCollegeAddr }\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Header style={{color:'black'}}>BANK ADDRESS:</List.Header>\r\n                                        <List.Content style={{color:'green'}}>\r\n                                        { this.state.yourBankAddr }\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    </List>\r\n                                </Segment>\r\n                                </div>\r\n                                <div>\r\n                                <h3>History</h3>\r\n                                <List divided relaxed>\r\n                                   {\r\n                                       this.state.listItems.map((item)=>{\r\n                                           const key = this.state.statusStack[this.state.listItems.indexOf(item)];\r\n                                        \r\n                                           return (\r\n                                            <List.Item key={key}>\r\n                                                <List.Icon name='check circle' size='large' verticalAlign='middle' style={{color:'green'}} />\r\n                                                <List.Content>\r\n                                                <List.Header style={{color:'blue'}}>{item}</List.Header>\r\n                                                </List.Content>\r\n                                            </List.Item>\r\n                                           )\r\n                                       })\r\n                                   }\r\n                                </List>\r\n                                </div>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n\r\n                </div>\r\n                <DefaultLoader active={this.state.loaderActive} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentDashboard;"]},"metadata":{},"sourceType":"module"}