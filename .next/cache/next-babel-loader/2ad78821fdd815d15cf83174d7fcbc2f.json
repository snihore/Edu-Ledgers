{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"G:\\\\Ethereum-Projects\\\\edu-ledger\\\\pages\\\\college_dashboard.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport GetInstance from '../instance';\nimport EducationLoan from '../ethereum/build/EducationLoan.json';\nimport { Menu, Card, Button, Divider, Form, Grid, Segment, Dimmer, Loader, List, Dropdown } from 'semantic-ui-react';\n\nvar DefaultLoader = function DefaultLoader(props) {\n  return __jsx(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Dimmer, {\n    active: props.active,\n    page: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })));\n};\n\nvar options = [{\n  key: '0x929fceD87459aCa903982f5c03056283EE0128cF',\n  text: 'OBC',\n  value: '0x929fceD87459aCa903982f5c03056283EE0128cF'\n}, {\n  key: '0xb34CA1921ee11d80CeD69e1c037B26423e34d1C5',\n  text: 'SBI',\n  value: '0xb34CA1921ee11d80CeD69e1c037B26423e34d1C5'\n}];\n\nfunction removeDuplicates(array) {\n  return array.filter(function (a, b) {\n    return array.indexOf(a) === b;\n  });\n}\n\n;\n\nvar CollegeDashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CollegeDashboard, _Component);\n\n  function CollegeDashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollegeDashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollegeDashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      account: '',\n      loanAddress: '',\n      loaderActive: false,\n      web3: undefined,\n      instance: undefined,\n      eduLoanInstance: undefined,\n      listItems: [],\n      statusStack: [],\n      banks: [],\n      stuCourseName: '',\n      stuCourseDuration: '',\n      stuSessionType: '',\n      stuTotalFee: '',\n      stuAccName: '',\n      stuAccNum: '',\n      stuAccBalance: '',\n      receiptAddr: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDocs\", function _callee() {\n      var receiptAddr;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(_this.state.eduLoanInstance.methods.admissionRecipt().call());\n\n            case 2:\n              receiptAddr = _context.sent;\n\n              _this.setState({\n                receiptAddr: receiptAddr\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAdmissionInfo\", function _callee2() {\n      var admissionInfo, courseName, courseDuration, sessionType, appxTotalFee;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(_this.state.eduLoanInstance.methods.admissionInfo().call());\n\n            case 2:\n              admissionInfo = _context2.sent;\n              courseName = admissionInfo.courseName, courseDuration = admissionInfo.courseDuration, sessionType = admissionInfo.sessionType, appxTotalFee = admissionInfo.appxTotalFee;\n\n              _this.setState({\n                stuCourseName: courseName,\n                stuCourseDuration: courseDuration,\n                stuSessionType: sessionType,\n                stuTotalFee: appxTotalFee\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getLoanAccInfo\", function _callee3() {\n      var loanAccDetails, accName, accNo, accBalance;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(_this.state.eduLoanInstance.methods.loanAccountdetails().call());\n\n            case 2:\n              loanAccDetails = _context3.sent;\n              accName = loanAccDetails.accName, accNo = loanAccDetails.accNo, accBalance = loanAccDetails.accBalance;\n\n              _this.setState({\n                stuAccName: accName,\n                stuAccNum: accNo,\n                stuAccBalance: accBalance\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAddresses\", function _callee4() {\n      var studentAddr, bankAddr;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(_this.state.eduLoanInstance.methods.student().call());\n\n            case 2:\n              studentAddr = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(_this.state.eduLoanInstance.methods.bank().call());\n\n            case 5:\n              bankAddr = _context4.sent;\n\n              _this.setState({\n                bankAddr: bankAddr,\n                studentAddr: studentAddr\n              });\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getLoanHistory\", function _callee5() {\n      var statusStack, i, status, item, localListItems;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this.setState({\n                statusStack: [],\n                listItems: []\n              });\n\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(_this.state.eduLoanInstance.methods.getStatusStack().call());\n\n            case 3:\n              statusStack = _context5.sent;\n              statusStack.sort();\n              statusStack = removeDuplicates(statusStack);\n\n              _this.setState({\n                statusStack: statusStack\n              }); // console.log(`STATUS STACK: ${statusStack}`);\n\n\n              i = 0;\n\n            case 8:\n              if (!(i < statusStack.length)) {\n                _context5.next = 20;\n                break;\n              }\n\n              status = statusStack[i];\n              _context5.next = 12;\n              return _regeneratorRuntime.awrap(_this.state.eduLoanInstance.methods.history(status).call());\n\n            case 12:\n              item = _context5.sent;\n              item += \"\\t[ \".concat(_this.state.listItems.length + 1, \" ]\");\n              localListItems = _this.state.listItems;\n              localListItems.push(item);\n\n              _this.setState({\n                listItems: localListItems\n              });\n\n            case 17:\n              i++;\n              _context5.next = 8;\n              break;\n\n            case 20:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSelectedBanks\", function (e, _ref) {\n      var value = _ref.value;\n\n      _this.setState({\n        banks: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"varifyAdmission\", function _callee6(event) {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(_this.state.stuCourseName === '' || _this.state.stuCourseDuration === '' || _this.state.stuSessionType === '' || _this.stuTotalFee === '')) {\n                _context6.next = 4;\n                break;\n              }\n\n              window.alert('Please fill all the input fields ...');\n              return _context6.abrupt(\"return\");\n\n            case 4:\n              _context6.prev = 4;\n\n              _this.setState({\n                loaderActive: true\n              });\n\n              _context6.next = 8;\n              return _regeneratorRuntime.awrap(_this.state.eduLoanInstance.methods.varifyAdmission(_this.state.stuCourseName, _this.state.stuCourseDuration, _this.state.stuSessionType, Number(_this.state.stuTotalFee), _this.state.banks).send({\n                from: _this.state.account\n              }));\n\n            case 8:\n              _this.setState({\n                loaderActive: false\n              });\n\n              _this.getLoanHistory();\n\n              _this.getAdmissionInfo();\n\n              _context6.next = 17;\n              break;\n\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](4);\n              window.alert(_context6.t0.message);\n\n              _this.setState({\n                loaderActive: false\n              });\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[4, 13]]);\n    });\n\n    return _this;\n  }\n\n  _createClass(CollegeDashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _ref2, web3, instance, accounts, eduLoanInstance;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this.setState({\n                loanAddress: this.props.query.loanAddress\n              });\n              _context7.next = 3;\n              return _regeneratorRuntime.awrap(new GetInstance().get());\n\n            case 3:\n              _ref2 = _context7.sent;\n              web3 = _ref2.web3;\n              instance = _ref2.instance;\n              _context7.next = 8;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 8:\n              accounts = _context7.sent;\n              _context7.next = 11;\n              return _regeneratorRuntime.awrap(new web3.eth.Contract(JSON.parse(EducationLoan[\"interface\"]), this.state.loanAddress));\n\n            case 11:\n              eduLoanInstance = _context7.sent;\n              // console.log(`Edu-Loan Instance: ${eduLoanInstance.options.address}`);\n              this.setState({\n                web3: web3,\n                instance: instance,\n                eduLoanInstance: eduLoanInstance,\n                account: accounts[0],\n                bankAddr: '',\n                studentAddr: ''\n              });\n              this.getLoanHistory();\n              this.getAddresses();\n              this.getAdmissionInfo();\n              this.getLoanAccInfo();\n              this.getDocs();\n\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        style: {\n          marginLeft: 100,\n          marginRight: 100,\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, __jsx(Menu, {\n        style: {\n          marginBottom: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, __jsx(Menu.Item, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Edu-Ledger\"), __jsx(Menu.Menu, {\n        position: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, __jsx(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, __jsx(\"h4\", {\n        style: {\n          marginRight: 10,\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"College Address:\"), this.state.account), __jsx(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, __jsx(\"h4\", {\n        style: {\n          marginRight: 10,\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Loan Address:\"), this.state.loanAddress)))), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, __jsx(Grid, {\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, __jsx(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, __jsx(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Admission Receipt\"), __jsx(List, {\n        selection: true,\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, __jsx(List.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, this.state.receiptAddr))))), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, __jsx(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, __jsx(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, __jsx(Card.Content, {\n        header: \"Varify Admission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), __jsx(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, __jsx(Form.Input, {\n        placeholder: \"Course Name\",\n        value: this.state.stuCourseName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            stuCourseName: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), __jsx(Form.Input, {\n        placeholder: \"Course Duration\",\n        value: this.state.stuCourseDuration,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            stuCourseDuration: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), __jsx(Form.Input, {\n        placeholder: \"Session Type\",\n        value: this.state.stuSessionType,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            sessionType: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), __jsx(Form.Input, {\n        placeholder: \"Total Fee (approx.)\",\n        value: this.state.stuTotalFee,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            stuTotalFee: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), __jsx(Dropdown, {\n        placeholder: \"Select Connected Banks\",\n        fluid: true,\n        multiple: true,\n        selection: true,\n        options: options,\n        style: {\n          marginBottom: 20\n        },\n        onChange: this.getSelectedBanks.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), __jsx(Button, {\n        content: \"Varify\",\n        primary: true,\n        onClick: this.varifyAdmission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), __jsx(Button, {\n        content: \"Reject\",\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })))), __jsx(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, __jsx(Card.Content, {\n        header: \"Enter Session Fee Amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), __jsx(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, __jsx(Form.Input, {\n        placeholder: \"Amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), __jsx(Form.Input, {\n        placeholder: \"Account Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), __jsx(Button, {\n        content: \"Update\",\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }))))))), __jsx(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Loan Participants\"), __jsx(Segment, {\n        inverted: true,\n        style: {\n          backgroundColor: '#EEEEEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, __jsx(List, {\n        divided: true,\n        inverted: true,\n        relaxed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"STUDENT ADDRESS:\"), __jsx(List.Content, {\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, this.state.studentAddr)), __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"BANK ADDRESS:\"), __jsx(List.Content, {\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, this.state.bankAddr))))), __jsx(\"div\", {\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Loan Account Details\"), __jsx(Segment, {\n        inverted: true,\n        style: {\n          backgroundColor: '#EEEEEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, __jsx(List, {\n        divided: true,\n        inverted: true,\n        relaxed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"ACCOUNT NAME:\"), __jsx(List.Content, {\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, this.state.stuAccName)), __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"ACCOUNT NUMBER:\"), __jsx(List.Content, {\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, this.state.stuAccNum)), __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"BALANCE:\"), __jsx(List.Content, {\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, this.state.stuAccBalance))))), __jsx(\"div\", {\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Course Details\"), __jsx(Segment, {\n        inverted: true,\n        style: {\n          backgroundColor: '#EEEEEE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, __jsx(List, {\n        divided: true,\n        inverted: true,\n        relaxed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Course Name:\"), __jsx(List.Content, {\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, this.state.stuCourseName)), __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"Course Duration:\"), __jsx(List.Content, {\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, this.state.stuCourseDuration)), __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"Session Type:\"), __jsx(List.Content, {\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, this.state.stuSessionType)), __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, __jsx(List.Header, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Total Fee (approx.):\"), __jsx(List.Content, {\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, this.state.stuTotalFee))))), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"History\"), __jsx(List, {\n        divided: true,\n        relaxed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, this.state.listItems.map(function (item) {\n        var key = _this2.state.statusStack[_this2.state.listItems.indexOf(item)];\n\n        return __jsx(List.Item, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380\n          },\n          __self: this\n        }, __jsx(List.Icon, {\n          name: \"check circle\",\n          size: \"large\",\n          verticalAlign: \"middle\",\n          style: {\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }), __jsx(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, __jsx(List.Header, {\n          style: {\n            color: 'blue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, item)));\n      }))))))), __jsx(DefaultLoader, {\n        active: this.state.loaderActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref3) {\n      var query = _ref3.query;\n      return {\n        query: query\n      };\n    }\n  }]);\n\n  return CollegeDashboard;\n}(Component);\n\nexport default CollegeDashboard;","map":{"version":3,"sources":["G:/Ethereum-Projects/edu-ledger/pages/college_dashboard.js"],"names":["React","Component","GetInstance","EducationLoan","Menu","Card","Button","Divider","Form","Grid","Segment","Dimmer","Loader","List","Dropdown","DefaultLoader","props","active","options","key","text","value","removeDuplicates","array","filter","a","b","indexOf","CollegeDashboard","account","loanAddress","loaderActive","web3","undefined","instance","eduLoanInstance","listItems","statusStack","banks","stuCourseName","stuCourseDuration","stuSessionType","stuTotalFee","stuAccName","stuAccNum","stuAccBalance","receiptAddr","state","methods","admissionRecipt","call","setState","admissionInfo","courseName","courseDuration","sessionType","appxTotalFee","loanAccountdetails","loanAccDetails","accName","accNo","accBalance","student","studentAddr","bank","bankAddr","getStatusStack","sort","i","length","status","history","item","localListItems","push","e","event","preventDefault","window","alert","varifyAdmission","Number","send","from","getLoanHistory","getAdmissionInfo","message","query","get","eth","getAccounts","accounts","Contract","JSON","parse","getAddresses","getLoanAccInfo","getDocs","marginLeft","marginRight","marginTop","marginBottom","color","target","getSelectedBanks","bind","backgroundColor","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport GetInstance from '../instance';\r\nimport EducationLoan from '../ethereum/build/EducationLoan.json';\r\nimport { Menu, Card, Button, Divider, Form, Grid, Segment, Dimmer, Loader, List, Dropdown } from 'semantic-ui-react';\r\n\r\nconst DefaultLoader = (props) => (\r\n    <Segment>\r\n      <Dimmer\r\n          active = {props.active}\r\n          page={true}>\r\n        <Loader />\r\n      </Dimmer>\r\n    </Segment>\r\n  )\r\n\r\n  const options = [\r\n    { \r\n        key: '0x929fceD87459aCa903982f5c03056283EE0128cF', \r\n        text: 'OBC', \r\n        value: '0x929fceD87459aCa903982f5c03056283EE0128cF' \r\n    },\r\n    {\r\n        key: '0xb34CA1921ee11d80CeD69e1c037B26423e34d1C5',\r\n        text: 'SBI',\r\n        value: '0xb34CA1921ee11d80CeD69e1c037B26423e34d1C5'\r\n    }\r\n  ]\r\n\r\n\r\nfunction removeDuplicates(array) {\r\n    return array.filter((a, b) => array.indexOf(a) === b)\r\n};\r\n\r\nclass CollegeDashboard extends Component {\r\n\r\n    static getInitialProps({ query }) {\r\n        return { query };\r\n    }\r\n\r\n    state = {\r\n        account: '',\r\n        loanAddress: '',\r\n        loaderActive: false,\r\n        web3: undefined,\r\n        instance: undefined,\r\n        eduLoanInstance: undefined,\r\n        listItems: [],\r\n        statusStack: [],\r\n        banks: [],\r\n        stuCourseName: '',\r\n        stuCourseDuration: '',\r\n        stuSessionType: '',\r\n        stuTotalFee: '',\r\n        stuAccName: '',\r\n        stuAccNum: '',\r\n        stuAccBalance: '',\r\n        receiptAddr: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({\r\n            loanAddress: this.props.query.loanAddress\r\n        });\r\n        const { web3, instance } = await new GetInstance().get();\r\n\r\n        const accounts = await web3.eth.getAccounts();\r\n\r\n        const eduLoanInstance = await new web3.eth.Contract(JSON.parse(EducationLoan.interface), this.state.loanAddress);\r\n        // console.log(`Edu-Loan Instance: ${eduLoanInstance.options.address}`);\r\n        this.setState({\r\n            web3,\r\n            instance,\r\n            eduLoanInstance,\r\n            account: accounts[0],\r\n            bankAddr: '',\r\n            studentAddr: ''\r\n        });\r\n        this.getLoanHistory();\r\n        this.getAddresses();\r\n        this.getAdmissionInfo();\r\n        this.getLoanAccInfo();\r\n        this.getDocs();\r\n    }\r\n\r\n    getDocs = async ()=>{\r\n        const receiptAddr = await this.state.eduLoanInstance.methods.admissionRecipt().call();\r\n\r\n        this.setState({\r\n            receiptAddr\r\n        });\r\n    }\r\n\r\n    getAdmissionInfo = async ()=>{\r\n        const admissionInfo = await this.state.eduLoanInstance.methods.admissionInfo().call();\r\n        const { courseName, courseDuration, sessionType, appxTotalFee } = admissionInfo;\r\n        this.setState({\r\n            stuCourseName: courseName,\r\n            stuCourseDuration: courseDuration,\r\n            stuSessionType: sessionType,\r\n            stuTotalFee: appxTotalFee\r\n        });\r\n    }\r\n\r\n    getLoanAccInfo = async ()=>{\r\n        const loanAccDetails = await this.state.eduLoanInstance.methods.loanAccountdetails().call();\r\n        const { accName, accNo, accBalance } = loanAccDetails;\r\n        this.setState({\r\n            stuAccName: accName,\r\n            stuAccNum: accNo,\r\n            stuAccBalance: accBalance\r\n        });\r\n    }\r\n\r\n    getAddresses = async ()=>{\r\n\r\n        const studentAddr =  await this.state.eduLoanInstance.methods.student().call();\r\n        const bankAddr = await this.state.eduLoanInstance.methods.bank().call();\r\n\r\n        this.setState({\r\n            bankAddr,\r\n            studentAddr\r\n        });\r\n    }\r\n\r\n    getLoanHistory = async ()=>{\r\n        this.setState({\r\n            statusStack: [],\r\n            listItems: []\r\n        });\r\n        let statusStack = await this.state.eduLoanInstance.methods.getStatusStack().call();\r\n        statusStack.sort();\r\n        statusStack = removeDuplicates(statusStack);\r\n        this.setState({ statusStack });\r\n        // console.log(`STATUS STACK: ${statusStack}`);\r\n        \r\n        for(var i=0; i<statusStack.length; i++){\r\n\r\n            const status = statusStack[i];\r\n\r\n            let item = await this.state.eduLoanInstance.methods.history(status).call();\r\n            item += `\\t[ ${this.state.listItems.length+1} ]`;\r\n            const localListItems = this.state.listItems;\r\n            localListItems.push(item);\r\n            this.setState({\r\n                listItems: localListItems\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    getSelectedBanks = (e, {value}) => {\r\n        this.setState({\r\n            banks: value\r\n        });\r\n        \r\n      }\r\n\r\n    varifyAdmission = async event =>{\r\n        event.preventDefault();\r\n\r\n        if(\r\n            this.state.stuCourseName === '' ||\r\n            this.state.stuCourseDuration === '' ||\r\n            this.state.stuSessionType === '' ||\r\n            this.stuTotalFee === ''\r\n        ){\r\n            window.alert('Please fill all the input fields ...');\r\n            return;\r\n        }\r\n\r\n        try{\r\n            this.setState({ loaderActive: true });\r\n            \r\n            await this.state.eduLoanInstance.methods.varifyAdmission(\r\n                this.state.stuCourseName,\r\n                this.state.stuCourseDuration,\r\n                this.state.stuSessionType,\r\n                Number(this.state.stuTotalFee),\r\n                this.state.banks\r\n            ).send({\r\n                from: this.state.account\r\n            });\r\n            \r\n            this.setState({ loaderActive: false });\r\n            this.getLoanHistory();\r\n            this.getAdmissionInfo();\r\n\r\n        }catch(err){\r\n            window.alert(err.message);\r\n            this.setState({ loaderActive: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{\r\n                marginLeft: 100,\r\n                marginRight: 100,\r\n                marginTop: 50\r\n            }}>\r\n                <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\r\n\r\n                <div>\r\n                    <Menu style={{ marginBottom: 50 }}>\r\n                        <Menu.Item header>\r\n                            Edu-Ledger\r\n                    </Menu.Item>\r\n\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                                <h4 style={{\r\n                                    marginRight: 10,\r\n                                    color: 'green'\r\n                                }}>College Address:</h4>{this.state.account}\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                <h4 style={{\r\n                                    marginRight: 10,\r\n                                    color: 'green'\r\n                                }}>Loan Address:</h4>{this.state.loanAddress}\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </Menu>\r\n                </div>\r\n                <div>\r\n                    <Grid columns={2}>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <div style={{marginBottom:20}}>\r\n                                    <h3>Admission Receipt</h3>\r\n                                    <List selection verticalAlign='middle'>\r\n                                        <List.Item>\r\n                                        <List.Content>\r\n                                        <List.Header>{ this.state.receiptAddr }</List.Header>\r\n                                        </List.Content>\r\n                                        </List.Item>\r\n                                    </List>\r\n                                </div>\r\n                                <div>\r\n                                    <Card.Group>\r\n                                        <Card>\r\n                                            <Card.Content header='Varify Admission' />\r\n                                            <Card.Content>\r\n                                                <Form>\r\n                                                    <Form.Input\r\n                                                        placeholder='Course Name'\r\n                                                        value={this.state.stuCourseName} \r\n                                                        onChange={event => this.setState({ stuCourseName: event.target.value })}\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Course Duration'\r\n                                                        value={this.state.stuCourseDuration} \r\n                                                        onChange={event => this.setState({ stuCourseDuration: event.target.value })}\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Session Type'\r\n                                                        value={this.state.stuSessionType} \r\n                                                        onChange={event => this.setState({ sessionType: event.target.value })}\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Total Fee (approx.)'\r\n                                                        value={this.state.stuTotalFee} \r\n                                                        onChange={event => this.setState({ stuTotalFee: event.target.value })}\r\n                                                    />\r\n                                                    <Dropdown \r\n                                                        placeholder='Select Connected Banks' \r\n                                                        fluid multiple \r\n                                                        selection \r\n                                                        options={options} \r\n                                                        style={{marginBottom:20}} \r\n                                                        onChange={this.getSelectedBanks.bind(this)}/>\r\n                                                    <Button content='Varify' primary onClick={this.varifyAdmission}/>\r\n                                                    <Button content='Reject' primary />\r\n                                                </Form>\r\n                                            </Card.Content>\r\n                                        </Card>\r\n                                        <Card>\r\n                                            <Card.Content header='Enter Session Fee Amount' />\r\n                                            <Card.Content>\r\n                                                <Form>\r\n                                                    <Form.Input\r\n                                                        placeholder='Amount'\r\n                                                    />\r\n                                                    <Form.Input\r\n                                                        placeholder='Account Number'\r\n                                                    />\r\n                                                    <Button content='Update' primary />\r\n                                                </Form>\r\n                                            </Card.Content>\r\n                                        </Card>\r\n                                        \r\n                                    </Card.Group>\r\n                                </div>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                            <   div style={{ marginBottom: 20 }}>\r\n                                    <h3>Loan Participants</h3>\r\n                                    <Segment inverted style={{backgroundColor: '#EEEEEE'}}>\r\n                                        <List divided inverted relaxed>\r\n                                        <List.Item>\r\n                                            <List.Header style={{color:'black'}}>STUDENT ADDRESS:</List.Header>\r\n                                            <List.Content style={{color:'green'}}>\r\n                                            { this.state.studentAddr }\r\n                                            </List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Header style={{color:'black'}}>BANK ADDRESS:</List.Header>\r\n                                            <List.Content style={{color:'green'}}>\r\n                                            { this.state.bankAddr }\r\n                                            </List.Content>\r\n                                        </List.Item>\r\n                                        </List>\r\n                                    </Segment>\r\n                                </div>\r\n                                <div style={{ marginBottom: 20 }}>\r\n                                <h3>Loan Account Details</h3>\r\n                                <Segment inverted style={{backgroundColor: '#EEEEEE'}}>\r\n                                    <List divided inverted relaxed>\r\n                                    <List.Item>\r\n                                        <List.Header style={{color:'black'}}>ACCOUNT NAME:</List.Header>\r\n                                        <List.Content style={{color:'green'}}>\r\n                                        { this.state.stuAccName }\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Header style={{color:'black'}}>ACCOUNT NUMBER:</List.Header>\r\n                                        <List.Content style={{color:'green'}}>\r\n                                        { this.state.stuAccNum }\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Header style={{color:'black'}}>BALANCE:</List.Header>\r\n                                        <List.Content style={{color:'green'}}>\r\n                                        { this.state.stuAccBalance }\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    </List>\r\n                                </Segment>\r\n                                </div>\r\n                                <div style={{ marginBottom: 20 }}>\r\n                                <h3>Course Details</h3>\r\n                                <Segment inverted style={{backgroundColor: '#EEEEEE'}}>\r\n                                    <List divided inverted relaxed>\r\n                                    <List.Item>\r\n                                        <List.Header style={{color:'black'}}>Course Name:</List.Header>\r\n                                        <List.Content style={{color:'green'}}>\r\n                                        { this.state.stuCourseName }\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Header style={{color:'black'}}>Course Duration:</List.Header>\r\n                                        <List.Content style={{color:'green'}}>\r\n                                        { this.state.stuCourseDuration }\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Header style={{color:'black'}}>Session Type:</List.Header>\r\n                                        <List.Content style={{color:'green'}}>\r\n                                        { this.state.stuSessionType }\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Header style={{color:'black'}}>Total Fee (approx.):</List.Header>\r\n                                        <List.Content style={{color:'green'}}>\r\n                                        { this.state.stuTotalFee }\r\n                                        </List.Content>\r\n                                    </List.Item>\r\n                                    </List>\r\n                                </Segment>\r\n                                </div>\r\n                                <div>\r\n                                <h3>History</h3>\r\n                                <List divided relaxed>\r\n                                   {\r\n                                       this.state.listItems.map((item)=>{\r\n                                           const key = this.state.statusStack[this.state.listItems.indexOf(item)];\r\n                                        \r\n                                           return (\r\n                                            <List.Item key={key}>\r\n                                                <List.Icon name='check circle' size='large' verticalAlign='middle' style={{color:'green'}} />\r\n                                                <List.Content>\r\n                                                <List.Header style={{color:'blue'}}>{item}</List.Header>\r\n                                                </List.Content>\r\n                                            </List.Item>\r\n                                           )\r\n                                       })\r\n                                   }\r\n                                </List>\r\n                                </div>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n\r\n                </div>\r\n                <DefaultLoader active={this.state.loaderActive} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CollegeDashboard;"]},"metadata":{},"sourceType":"module"}