{"ast":null,"code":"import Web3 from 'web3';\n\nconst makeProvider = () => {\n  const provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/744d8f9fc55945a59ad5c13651c25d51');\n  return provider;\n};\n\nclass GetMetamaskProvider {\n  constructor() {\n    if (true) {\n      if (typeof window.ethereum !== undefined) {\n        this.web3 = new Web3(window.ethereum);\n      } else if (typeof window.web3 !== undefined) {\n        this.web3 = new Web3(window.web3.currentProvider);\n      } else {\n        this.web3 = new Web3(makeProvider);\n      }\n    } else {\n      this.web3 = new Web3(makeProvider);\n    }\n  }\n\n  async enable() {\n    if (window.ethereum) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n      await window.ethereum.enable();\n      console.log(`TAG_web3JS: window.ethereum`);\n      return this.web3;\n    } else {\n      console.log(`TAG_web3JS: window.web3.currentProvider`);\n      return this.web3;\n    }\n  }\n\n}\n\nexport default GetMetamaskProvider;","map":{"version":3,"sources":["G:/Ethereum-Projects/edu-ledger/web3.js"],"names":["Web3","makeProvider","provider","providers","HttpProvider","GetMetamaskProvider","constructor","window","ethereum","undefined","web3","currentProvider","enable","autoRefreshOnNetworkChange","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,YAAY,GAAG,MAAI;AACrB,QAAMC,QAAQ,GAAG,IAAIF,IAAI,CAACG,SAAL,CAAeC,YAAnB,CACb,+DADa,CAAjB;AAIA,SAAOF,QAAP;AACH,CAND;;AAQA,MAAMG,mBAAN,CAAyB;AAErBC,EAAAA,WAAW,GAAE;AACT,cAA+B;AAC3B,UAAG,OAAOC,MAAM,CAACC,QAAd,KAA2BC,SAA9B,EAAwC;AACpC,aAAKC,IAAL,GAAY,IAAIV,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAZ;AACH,OAFD,MAEM,IAAG,OAAOD,MAAM,CAACG,IAAd,KAAuBD,SAA1B,EAAoC;AACtC,aAAKC,IAAL,GAAY,IAAIV,IAAJ,CAASO,MAAM,CAACG,IAAP,CAAYC,eAArB,CAAZ;AACH,OAFK,MAED;AACD,aAAKD,IAAL,GAAY,IAAIV,IAAJ,CAASC,YAAT,CAAZ;AACH;AACJ,KARD,MAQK;AACD,WAAKS,IAAL,GAAY,IAAIV,IAAJ,CAASC,YAAT,CAAZ;AACH;AACJ;;AAED,QAAMW,MAAN,GAAc;AAEV,QAAGL,MAAM,CAACC,QAAV,EAAmB;AACfD,MAAAA,MAAM,CAACC,QAAP,CAAgBK,0BAAhB,GAA6C,KAA7C;AACA,YAAMN,MAAM,CAACC,QAAP,CAAgBI,MAAhB,EAAN;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAa,6BAAb;AACA,aAAO,KAAKL,IAAZ;AACH,KALD,MAKK;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAa,yCAAb;AACA,aAAO,KAAKL,IAAZ;AACH;AACJ;;AA3BoB;;AA8BzB,eAAeL,mBAAf","sourcesContent":["import Web3 from 'web3';\r\n\r\nconst makeProvider = ()=>{\r\n    const provider = new Web3.providers.HttpProvider(\r\n        'https://rinkeby.infura.io/v3/744d8f9fc55945a59ad5c13651c25d51'\r\n    );\r\n\r\n    return provider;\r\n}\r\n\r\nclass GetMetamaskProvider{\r\n\r\n    constructor(){\r\n        if(typeof window !== undefined){\r\n            if(typeof window.ethereum !== undefined){\r\n                this.web3 = new Web3(window.ethereum);\r\n            }else if(typeof window.web3 !== undefined){\r\n                this.web3 = new Web3(window.web3.currentProvider);\r\n            }else{\r\n                this.web3 = new Web3(makeProvider);\r\n            }\r\n        }else{\r\n            this.web3 = new Web3(makeProvider);\r\n        }\r\n    }\r\n\r\n    async enable(){\r\n\r\n        if(window.ethereum){\r\n            window.ethereum.autoRefreshOnNetworkChange = false;\r\n            await window.ethereum.enable();\r\n            console.log(`TAG_web3JS: window.ethereum`);\r\n            return this.web3;\r\n        }else{\r\n            console.log(`TAG_web3JS: window.web3.currentProvider`);\r\n            return this.web3;\r\n        }\r\n    }\r\n}\r\n\r\nexport default GetMetamaskProvider;"]},"metadata":{},"sourceType":"module"}